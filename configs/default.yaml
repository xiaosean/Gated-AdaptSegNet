# logger options
name: xiaoAdaptSeg
test_summary: default setting use FastPhoto, G output seg and edge, D input pred seg
log_iter: 1                   # How often do you want to log the training stats
snapshot_save_iter: 10000     # How often do you want to save trained models
snapshot_save_dir: ./snapshots/GTA2Cityscapes_multi/
image_save_iter: 1000         #  How often do you want to save output images during training
image_save_dir: ./check_output/ #each image_save_iter epochs will show image, can check model output
checkpoints_dir: ./check_output
web_dir: ./web
log_dir: ./check_output/log
d_model: Gated

# optimization options
num_steps: 250000    # maximum number of training iterations
batch_size: 1                 # batch size default 1 SGD
iter_size: 1                  # each iteration size default 1 SGD
decay_power: 0.9
random_seed: 1234
momentum: 0.9
weight_decay: 0.0005          # weight decay
beta1: 0.                    # Adam parameter
beta2: 0.999                  # Adam parameter
D_beta1: 0                    # Adam parameter
D_beta2: 0.999                  # Adam parameter
lr_g: 0.00025                    # initial learning rate SGD
lr_d: 0.001                    # initial learning rate Adam

# model options
model: DeepLabEdge
g_model: default
restore: true
restore_from: http://vllab.ucmerced.edu/ytsai/CVPR18/DeepLab_resnet_pretrained_init-f81d91e8.pth
# restore_from: ./snapshots/GTA2Cityscapes_multi/GTA5_50000.pth
# restore_from: ./snapshots/single_DA_baseline_disable10x/GTA5_50000.pth
# restore_from: E:/AdaptionSeg_20180620-single_DA-refactor-try5k/model_save/GTA5_5000.pth

gen:
  lambda_seg: 1
  lambda_adv_edge: 0.1
  lambda_adv_target: 0.001
  lambda_adv_foreground: 2

dis:
  adv_loss_opt: hinge  # [wgan-gp / hinge / bce]
  input_as_global_dis_features: False
  input_as_foreground_dis_features: False
  mask_as_foreground_dis_features: True


# data options
img_mean_r: 104.00698793                               # dataset img mean R
img_mean_g: 116.66876762                              # dataset img mean G
img_mean_b: 122.67891434                               # dataset img mean B
ignore_label: 255             # ignore nonclass color BLACK
num_classes: 19
num_workers: 4                             # number of data loading threads
random_mirror: False
random_scale: False     
source_dataset: GTA5 # choose source dataset[GTA5/SYNTHIA]
data_directory: ./data/GTA5                 # dataset folder location
data_list_path: ./dataset/gta5_list/train.txt # dataset training txt location
data_subset: 1
input_size_h: 720         # resize to the height of source image (GTA5)
input_size_w: 1280        # resize to the width of source image (GTA5)
data_directory_target: ./data/Cityscapes/data
data_list_path_target: ./dataset/cityscapes_list/train.txt
input_target_size_h: 512  # resize to the height of target image (CityScapes)
input_target_size_w: 1024        # resize to the width of target image (CityScapes)

#gpu setting
gpu: 0

# for displays
visualizer: true
tf_log: true # if specified, use tensorboard logging. Requires tensorflow installed
display_winsize: 512 # display window size
display_rows: 30
# display_freq: 100 # frequency of showing training results on screen'
# print_freq: 100 # frequency of showing training results on console')
# save_latest_freq: 1000 # frequency of saving the latest results')
use_html: true #do not save intermediate training results to [opt.checkpoints_dir]/[opt.name]/web/')
# debug: true #only do one epoch and displays at each iteration')
